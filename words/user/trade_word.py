import config
from data import db
from decimal import Decimal

cannot_open_trade_yourself = "<i>–ù–µ–ª—å–∑—è –æ—Ç–∫—Ä—ã—Ç—å —Å–¥–µ–ª–∫—É —Å–∞–º–∏–º —Å–æ–±–æ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ.</i>"
seller_not_found = "<i>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ.</i>"
wrong_id_or_name = "<i>–û–π —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–∏—Å–∞—Ç username –∏–ª–∏ ID.</i>"
choose_coin = "<b>üí≥ –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É —Å–¥–µ–ª–∫–∏:</b>"
trade_canceled = "<i>–°–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.</i>"
wrong_input_amount = "<i>–ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–∞–ø–∏—Ç—É—é ¬´,¬ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ—á–∫–∏ ¬´.¬ª.</i>"
not_enough_money = "<i>–í –±–∞–ª–∞–Ω—Å–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ.</i>"
min_trade_desc = "<i>–û–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏—è —Å–¥–µ–ª–∫–∏ –ø–æ–¥—Ä–æ–±–Ω–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ.</i>"
trade_desc = ("<b>–ß—Ç–æ –±—É–¥–µ—Ç–µ –ø–æ–∫—É–ø–∞—Ç—å —É –ø—Ä–æ–¥–∞–≤—å—Ü–∞?</b> <i>(–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏—è —Å–¥–µ–ª–∫–∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ. –£—Å–ª–æ–≤–∏—è "
              "—Å–¥–µ–ª–∫–∏ –ø–æ–º–æ–≥—É—Ç –≤–∞–º —Ä–µ—à–∞—Ç—å —Å–ø–æ—Ä)</i>\n\n<b>–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏—è —Å–¥–µ–ª–∫–∏:</b>")
waiting_confirm_trade_seller = "<b>–û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç–∞ –ø—Ä–æ–¥–∞–≤—Ü–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ!</b>"
empty_page = "–ü—É—Å—Ç–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"
trade_close = "<b>–í—ã —É–≤–µ—Ä–µ–Ω—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–¥–µ–ª–∫—É?</b>"
write_feedback = "<b>–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–∑—ã–≤ –æ –ø—Ä–æ–¥–∞–≤—Ü–µ.</b> "
not_enough_feedback = "<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–∏—à–∏—Ç–µ –æ—Ç–∑—ã–≤ –ø–æ–¥—Ä–æ–±–Ω–µ–µ.</b>"
dismute = "<b>–û–±—ä—è—Å–Ω–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —á—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫?</b> <i>(–û–ø–∏—à–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é –ø–æ–¥—Ä–æ–±–Ω–µ–µ).</i>"
not_enough_dismute = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ o–ø–∏—à–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é –ø–æ–¥—Ä–æ–±–Ω–µ–µ."
open_dismute = "\n\n<b>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. –û–∂–∏–¥–∞–π—Ç–µ!</b>"
try_again = "<i>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ.</i>"
error_delete_message = "<i>–û—à–∏–±–∫–∞ 400</i>"


def seller_profile(seller_data):
    number_trade = db.number_closed_trades(seller_data['userid'])

    text = f"""<b>üë§ –û–± –∞–∫–∫–∞—É–Ω—Ç–µ</b>
<b>‚îå </b><i><b>–ò–º—è: </b><code>{seller_data['fullname']}</code></i>
<b>‚îú </b><i><b>–õ–æ–≥–∏–Ω: </b>{seller_data['username']}</i>
<b>‚îî </b><i><b>ID –∞–∫–∫–∞—É–Ω—Ç–∞: </b><code>{seller_data['userid']}</code></i>

<b>üìä –°–¥–µ–ª–∫–∏</b>
<b>‚îå </b><i><b>–ü–æ–∫—É–ø–æ–∫: </b>{number_trade[0]}</i>
<b>‚îî </b><i><b>–ü—Ä–æ–¥–∞–∂: </b>{number_trade[1]}</i>"""

    return text


def seller_feedbacks(user_id, page=1):
    global text

    feedbacks_data = db.get_user_feedbacks(user_id, page)

    if feedbacks_data:
        text = ""

        for item in feedbacks_data:
            user_data = db.get_user_data(user_id=item[2])

            if user_data is not None:
                text += f"""<b>‚îå<i> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: </i></b><i><a href='t.me/{user_data['username'][1:]}'>{user_data['fullname']}</a></i>
<b>‚îú<i> –î–∞—Ç–∞: </i></b><i>{item[5]}</i>
<b>‚îî<i> –û—Ç–∑—ã–≤: </i></b><i>{item[4]}</i>\n\n"""

    else:
        text = "<b>–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç</b>"

    return text


def amount(userid, coin):
    user_data = db.get_user_data(userid=userid)
    user_balance = "{:.2f}".format(float(user_data[config.CURRENCY[coin] + "_balance"])) if config.CURRENCY[
                                                                                                coin] == "rub" or \
                                                                                            config.CURRENCY[
                                                                                                coin] == "usd" else "{:.8f}".format(
        float(user_data[config.CURRENCY[coin] + "_balance"]))

    text = f"""<b>üí≥ –í–∞—à {config.CURRENCY[coin].upper()} –±–∞–ª–∞–Ω—Å:</b> <code>{user_balance}{config.CURRENCY_ICON[coin]}</code>

<b>–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å–¥–µ–ª–∫–∏:</b>"""

    return text


def wrong_amount(coin):
    global text

    if config.CURRENCY[coin] == "rub" or config.CURRENCY[coin] == "usd":
        text = "<i>–°—É–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±–æ–ª–µ–µ 3 –¥–µ—Å—è—Ç–∏—á–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤.</i>"

    elif config.CURRENCY[coin] == "btc":
        text = "<i>–°—É–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±–æ–ª–µ–µ 8 –¥–µ—Å—è—Ç–∏—á–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤.</i>"

    return text


def trade_min_amount(coin):
    text = f"<i>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å–¥–µ–ª–∫–∏ <code>{config.TRADE_LIMIT_CURRENCY_AMOUNT[coin]}{config.CURRENCY[coin].upper()}</code> {'(~1$)' if coin == 2 else ''}.</i>"

    return text


def confirm_trade(trade_data, trade_desc):
    global text

    seller_data = db.get_user_data(user_id=trade_data['seller_id'])
    if trade_data['coin'] == 2:
        btc_amount_rate = Decimal("{:.2f}".format(float(float(trade_data['amount']) * float(config.BTCUSDT_RATE))))

        text = f"""<b>üìÇ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–¥–µ–ª–∫–∏</b>
<b>‚îå </b><i><b>–ü—Ä–æ–¥–∞–≤–µ—Ü: </b><a href='t.me/{seller_data['username'][1:]}'>{seller_data['fullname']}</a></i>
<b>‚îú </b><i><b>–°—É–º–º–∞: </b><code>{trade_data['amount']}{config.CURRENCY_ICON[trade_data['coin']]}</code> (~{btc_amount_rate}$)</i>
<b>‚îî </b><i><b>–£—Å–ª–æ–≤–∏—è: </b>{trade_desc}</i>"""

    else:
        text = f"""<b>üìÇ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–¥–µ–ª–∫–∏</b>
<b>‚îå </b><i><b>–ü—Ä–æ–¥–∞–≤–µ—Ü: </b><a href='t.me/{seller_data['username'][1:]}'>{seller_data['fullname']}</a></i>
<b>‚îú </b><i><b>–°—É–º–º–∞: </b><code>{trade_data['amount']}{config.CURRENCY_ICON[trade_data['coin']]}</code></i>
<b>‚îî </b><i><b>–£—Å–ª–æ–≤–∏—è: </b>{trade_desc}</i>"""

    return text


def confirm_trade_seller(trade_data):
    global text

    customer_data = db.get_user_data(user_id=trade_data['customer_id'])

    if trade_data['coin'] == 2:
        btc_amount_rate = Decimal("{:.2f}".format(float(float(trade_data['amount']) * float(config.BTCUSDT_RATE))))

        text = f"""<b>üìÇ –ù–æ–≤–∞—è —Å–¥–µ–ª–∫–∞</b>
<b>‚îå </b><i><b>–ü–æ–∫—É–ø–∞—Ç–µ–ª—å: </b><a href='t.me/{customer_data['username'][1:]}'>{customer_data['fullname']}</a></i>
<b>‚îú </b><i><b>–°—É–º–º–∞: </b><code>{trade_data['amount']}{config.CURRENCY_ICON[trade_data['coin']]}</code> (~{btc_amount_rate}$)</i>
<b>‚îî </b><i><b>–£—Å–ª–æ–≤–∏—è: </b>{trade_data['desc']}</i>"""

    else:
        text = f"""<b>üìÇ –ù–æ–≤–∞—è —Å–¥–µ–ª–∫–∞</b>
<b>‚îå </b><i><b>–ü–æ–∫—É–ø–∞—Ç–µ–ª—å: </b><a href='t.me/{customer_data['username'][1:]}'>{customer_data['fullname']}</a></i>
<b>‚îú </b><i><b>–°—É–º–º–∞: </b><code>{trade_data['amount']}{config.CURRENCY_ICON[trade_data['coin']]}</code></i>
<b>‚îî </b><i><b>–£—Å–ª–æ–≤–∏—è: </b>{trade_data['desc']}</i>"""

    return text


def show_trade_data(trade_id, action, userid=None, hide=None):
    global text, trade_amount, btc_amount_rate

    trade_data = db.get_trade_data(trade_id)

    status_trade = {
        1: ["–û—Ç–∫–∞–∑–∞–Ω", "–±—ã–ª –æ—Ç–∫–∞–∑–∞–Ω", "‚õîÔ∏è"],
        2: ["–û–∂–∏–¥–∞–Ω–∏–µ", "–±—ã–ª–∞ –ø—Ä–∏–Ω—è—Ç–æ", "‚è≥"],
        3: ["–ó–∞–∫—Ä—ã—Ç–∞", "–±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç–∞", "‚úÖ"],
        4: ["–ó–∞–º–æ—Ä–æ–∂–µ–Ω", "–±—ã–ª –∑–∞–º–æ—Ä–æ–∂–µ–Ω", "üîí"]
    }

    user_act_swap = {
        "customer": ["seller", "–ü—Ä–æ–¥–∞–≤–µ—Ü"],
        "seller": ["customer", "–ü–æ–∫—É–ø–∞—Ç–µ–ª—å"]
    }

    if action == 0:
        text = f"<b>–°–¥–µ–ª–∫–∞ ‚Ññ: <code>{trade_data['id']}</code> {status_trade[trade_data['status']][1]}</b>"

    elif action == 1:
        user_act = "customer" if trade_data["customer_id"] == db.get_user_id(userid) else "seller"
        user_data = db.get_user_data(user_id=trade_data[user_act_swap[user_act][0] + "_id"])
        trade_amount = '{:.2f}'.format(float(trade_data['amount'])) if trade_data['coin'] == 0 or trade_data['coin'] == 1 else '{:.8f}'.format(float(trade_data['amount']))
        btc_amount_rate = f"(~{Decimal('{:.2f}'.format(float(float(trade_data['amount']) * float(config.BTCUSDT_RATE))))}$)" if trade_data['coin'] == 2 else ""

        if trade_data['status'] == 1 or trade_data['status'] == 2:
            text = f"""<b>üìÇ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–¥–µ–ª–∫–∏</b>
<b>‚îå </b><i><b>–°–¥–µ–ª–∫–∞ ‚Ññ: </b><code>{trade_data['id']}</code></i>
<b>‚îú </b><i><b>{user_act_swap[user_act][1]}: </b><a href='t.me/{user_data['username'][1:]}'>{user_data['fullname']}</a></i>
<b>‚îú </b><i><b>–°—É–º–º–∞: </b><code>{trade_amount}{config.CURRENCY_ICON[trade_data['coin']]}</code>{btc_amount_rate}</i>
<b>‚îú </b><i><b>–£—Å–ª–æ–≤–∏—è: </b>{trade_data['desc']}</i>
<b>‚îî </b><i><b>–°—Ç–∞—Ç—É—Å: </b>{status_trade[trade_data['status']][0]} {status_trade[trade_data['status']][2]}</i>"""

        elif trade_data['status'] == 3:
            feedback = db.get_trade_feedback(trade_data['id'])

            text = f"""<b>üìÇ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–¥–µ–ª–∫–∏</b>
<b>‚îå </b><i><b>–°–¥–µ–ª–∫–∞ ‚Ññ: </b><code>{trade_data['id']}</code></i>
<b>‚îú </b><i><b>{user_act_swap[user_act][1]}: </b><a href='t.me/{user_data['username'][1:]}'>{user_data['fullname']}</a></i>
<b>‚îú </b><i><b>–°—É–º–º–∞: </b><code>{trade_amount}{config.CURRENCY_ICON[trade_data['coin']]}</code>{btc_amount_rate}</i>
<b>‚îú </b><i><b>–£—Å–ª–æ–≤–∏—è: </b>{trade_data['desc']}</i>
<b>‚îú </b><i><b>–û—Ç–∑—ã–≤: </b>{'–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç' if feedback is None else feedback}</i>
<b>‚îî </b><i><b>–°—Ç–∞—Ç—É—Å: {status_trade[trade_data['status']][0]} ‚úÖ</b></i>

{'<b>–°–ø–∞—Å–∏–±–æ –≤–∞–º —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –Ω–∞—à <u>–ì–∞—Ä–∞–Ω—Ç –ë–æ—Ç ‚≠ê</u></b>' if hide is None else ''}"""

        elif trade_data['status'] == 4:
            dispute_data = db.get_dispute_data(trade_data['id'])
            dispute_open_person = db.get_user_data(user_id=dispute_data['who_open_id'])

            text = f"""<b>üìÇ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–¥–µ–ª–∫–∏</b>
<b>‚îå </b><i><b>–°–¥–µ–ª–∫–∞ ‚Ññ: </b><code>{trade_data['id']}</code></i>
<b>‚îú </b><i><b>{user_act_swap[user_act][1]}: </b><a href='t.me/{user_data['username'][1:]}'>{user_data['fullname']}</a></i>
<b>‚îú </b><i><b>–°—É–º–º–∞: </b><code>{trade_amount}{config.CURRENCY_ICON[trade_data['coin']]}</code>{btc_amount_rate}</i>
<b>‚îú </b><i><b>–£—Å–ª–æ–≤–∏—è: </b>{trade_data['desc']}</i>
<b>‚îú </b><i><b>–°—Ç–∞—Ç—É—Å: </b>{status_trade[trade_data['status']][0]} {status_trade[trade_data['status']][2]}</i>
<b>‚îú </b><i><b>–ó–∞–º–æ—Ä–æ–∑–∏–ª: </b><a href='t.me/{dispute_open_person['username'][1:]}'>{dispute_open_person['fullname']}</a></i>
<b>‚îî </b><i><b>–ü—Ä–∏—á–∏–Ω–∞: </b>{dispute_data['reason']}</i>"""

    elif action == 2:
        feedback = db.get_trade_feedback(trade_data['id'])

        if feedback:
            text = f"""<b>üì¢ –°–¥–µ–ª–∫–∞ ‚Ññ <code>{trade_data['id']}</code> —Å—É–º–º–∞ <code>{trade_amount}{config.CURRENCY_ICON[trade_data['coin']]}</code>{btc_amount_rate} –æ—Ç {db.get_user_username(user_id=trade_data['customer_id'])} –¥–ª—è {db.get_user_username(user_id=trade_data['seller_id'])} –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç–∞.</b>\n
<b>–û—Ç–∑—ã–≤: </b><i>{feedback}.</i>"""

        else:
            text = f"<b>üì¢ –°–¥–µ–ª–∫–∞ ‚Ññ <code>{trade_data['id']}</code> —Å—É–º–º–∞ <code>{trade_amount}{config.CURRENCY_ICON[trade_data['coin']]}</code>{btc_amount_rate} –æ—Ç {db.get_user_username(user_id=trade_data['customer_id'])} –¥–ª—è {db.get_user_username(user_id=trade_data['seller_id'])} –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç–∞.</b>"

    return text
